version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: go-next-postgres
    environment:
      - POSTGRES_DB=go_next
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - backend-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d go_next"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Backend service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-next-backend
    ports:
      - "8080:8080"
    environment:
      - DB_TYPE=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=go_next
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_SSLMODE=disable
      - JWT_SECRET=your-super-secret-jwt-key-here
      - PORT=8080
      - GIN_MODE=debug
      - CORS_ORIGIN=http://localhost:3000
      - APP_ENV=development
      - REDIS_HOST=localhost
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_password
      - MAIL_HOST=localhost
      - MAIL_PORT=1025
      - MAIL_USERNAME=
      - MAIL_PASSWORD=
      - MAIL_FROM=noreply@example.com
    volumes:
      - ./log:/root/log
      - ./storage:/root/storage
      - ./data:/root/data
    networks:
      - backend-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

volumes:
  postgres_data:
    driver: local
  backend_data:
    driver: local

networks:
  backend-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16